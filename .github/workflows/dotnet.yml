name: Windows App with Linux-based Emulator

on:
  workflow_dispatch:
  
jobs:
  build-and-run:
    runs-on: windows-2025

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: install wsl distro
      run: wsl --install Ubuntu

    - name: prevent wsl shutdown
      run:  wsl -d Ubuntu  --exec dbus-launch true

    - name: Install Docker in WSL
      shell: pwsh
      run: >
         wsl -e sh -c '
         sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release &&
         curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg &&
         echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" |
         sudo tee /etc/apt/sources.list.d/docker.list > /dev/null &&
         sudo apt-get update &&
         sudo apt-get install -y docker-ce docker-ce-cli containerd.io &&
         sudo service docker start
         '

    - name: Run Event Hub Emulator in WSL
      shell: pwsh
      run: |
        wsl -e bash -c "sudo docker network create messaging-network"
        wsl -e bash -c "sudo docker run -d --rm --name azurite --network messaging-network -p 10000:10000 -p 10001:10001 -p 10002:10002 mcr.microsoft.com/azure-storage/azurite"
        wsl -e bash -c "sudo docker run -d --rm --name eventhubs-emulator --network messaging-network  -e BLOB_SERVER=azurite -e METADATA_SERVER=azurite  -e ACCEPT_EULA=Y -p 5672:5672 -p 9092:9092 -p 5300:5300 mcr.microsoft.com/azure-messaging/eventhubs-emulator"

    - name: wsl docker ps
      run: |
        wsl docker ps

    - name: wsl docker logs
      run: |
        sleep 2
        wsl docker logs eventhubs-emulator

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Build .NET App
      run: |
        dotnet build ./DotNetApp/DotNetApp.csproj

    - name: Run .NET Web API in background
      shell: pwsh
      run: |
        Start-Process dotnet -ArgumentList "run --project ./DotNetApp/DotNetApp.csproj" -PassThru -WindowStyle Hidden | ForEach-Object { $_.Id } | Out-File pid.txt

    - name: Test .NET Application
      run: |
        sleep 5
        dotnet test ./DotNetApp.Test/DotNetApp.Test.csproj
